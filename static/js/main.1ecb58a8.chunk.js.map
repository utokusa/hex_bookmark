{"version":3,"sources":["images/shape.svg","images/logo.svg","FileSelectButton.js","Bookmark.js","BinaryFileInput.js","HexBookmarkBody.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","theme","input","display","button","margin","spacing","Bookmark","props","classes","className","accept","id","strId","type","ref","fin","onChange","htmlFor","Button","variant","color","size","component","label","Container","Box","mt","BookmarkTable","boxShadow","bgcolor","onToggleByteOder","onSaveBookmark","onBookmarkLoad","isLittleEndian","columns","data","onRowAdd","onRowUpdate","onRowDelete","bookmarkFile","toggleByteOder","saveBookmark","handleBookmarkLoad","byteOrderLabal","title","editable","newData","oldData","options","exportButton","components","Toolbar","flexDirection","alignItems","mx","onClick","style","width","startIcon","BinaryFileInput","p","FileInput","newFileInfo","Typography","noWrap","textAlign","fileInfo","event","preventDefault","current","files","name","HexBookmarkBody","React","useState","inputBin","setInputBin","dtypeEnum","int8","uint8","int16","uint16","int32","uint32","float32","float64","ascii","dtypeLookup","dtypeSize","defaultDtype","defaultDtypeStr","String","defaultDsize","field","lookup","offset","dataType","dataSize","value","hexDump","state","setState","validateInput","offsetInt","parseInt","isNaN","dtype","dataSizeInt","validateDataSize","length","slice","validateName","prevState","indexOf","readAsType","bufferView","res","byteLength","getInt8","getUint8","getInt16","getUint16","getInt32","getUint32","getFloat32","getFloat64","dataView","numLetters","byteArr","i","val","push","fromCharCode","getAsciiChars","console","log","readAsHex","buffer","byteArray","hexArr","Array","prototype","map","call","x","toString","toUpperCase","join","buf2hex","Uint8Array","readValue","f","reader","FileReader","onload","e","result","view","DataView","dtypeInt","readData","onerror","bind","this","readAsArrayBuffer","updateTableValues","formatInput","numDigits","padStart","formatOffset","bookmark","row","string","JSON","stringify","blob","Blob","link","document","createElement","href","window","URL","createObjectURL","download","click","obj","parse","target","error","readAsText","Promise","resolve","splice","backgroundShape","require","logo","createMuiTheme","typography","fontFamily","palette","primary","light","main","dark","contrastText","secondary","app","flexGrow","backgroundColor","grey","overflow","background","backgroundSize","backgroundPosition","paddingBottom","HexBookmarkApp","AppBar","position","marginLeft","height","src","alt","Copyright","HexBookmark","fileInput","createRef","Component","align","Link","Date","getFullYear","App","rel","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1ecb58a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shape.cbf2fd30.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.5b607bd4.svg\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    display: 'none',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\nexport default function Bookmark(props) {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <input\n        className={classes.input}\n        accept={props.accept}\n        id={props.strId}\n        type=\"file\"\n        ref={props.fin}\n        onChange={props.onChange}\n      />\n      <label htmlFor={props.strId}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"small\"\n          component=\"span\"\n        >\n          {props.label}\n        </Button>\n      </label>\n    </div>\n  );\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Button from '@material-ui/core/Button';\nimport SaveIcon from '@material-ui/icons/Save';\nimport MaterialTable, { MTableToolbar } from 'material-table';\nimport FileSelectButton from './FileSelectButton'\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles(theme => ({\n  input: {\n    display: 'none',\n  },\n  button: {\n    margin: theme.spacing(0.5),\n  },\n}));\n\nexport default function Bookmark(props) {\n  return (\n    <Container>\n      <Box\n        mt={2}\n      >\n        <BookmarkTable\n          boxShadow={3}\n          bgcolor=\"background.paper\"\n          fin={props.fin}\n          onToggleByteOder={props.onToggleByteOder}\n          onSaveBookmark={props.onSaveBookmark}\n          onBookmarkLoad={props.onBookmarkLoad}\n          isLittleEndian={props.isLittleEndian}\n          columns={props.columns}\n          data={props.data}\n          onRowAdd={props.onRowAdd}\n          onRowUpdate={props.onRowUpdate}\n          onRowDelete={props.onRowDelete}\n          bookmarkFile={props.bookmarkFile}\n        />\n      </Box>\n    </Container>\n  );\n}\n\nfunction BookmarkTable(props) {\n  let bookmarkFile = props.bookmarkFile;\n  const classes = useStyles();\n  function toggleByteOder() {\n    props.onToggleByteOder();\n  }\n\n  function saveBookmark() {\n    props.onSaveBookmark();\n  }\n\n  function handleBookmarkLoad() {\n    props.onBookmarkLoad();\n  }\n  const byteOrderLabal = props.isLittleEndian ? \"Little Endian\" : \"Big Endian\";\n  return (\n    <div>\n      <MaterialTable\n        title=\"Bookmarks\"\n        columns={props.columns}\n        data={props.data}\n        editable={{\n          onRowAdd: newData => props.onRowAdd(newData),\n          onRowUpdate: (newData, oldData) => props.onRowUpdate(newData, oldData),\n          onRowDelete: oldData => props.onRowDelete(oldData),\n        }}\n        options={{\n          exportButton: true\n        }}\n        components={{\n          Toolbar: props => (\n            <div>\n              <MTableToolbar {...props} />\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                alignItems=\"center\"\n                mx={3}\n              >\n                <Button\n                  variant=\"outlined\"\n                  color=\"primary\"\n                  size=\"small\"\n                  onClick={toggleByteOder}\n                  style={{ width: '9rem' }}\n                  className={classes.button}\n                >\n                  {byteOrderLabal}\n                </Button>\n                <Button\n                  variant=\"contained\"\n                  color=\"primary\"\n                  size=\"small\"\n                  className={classes.button}\n                  startIcon={<SaveIcon />}\n                  onClick={saveBookmark}\n\n                >\n                  Save Bookmark\n                </Button>\n                <FileSelectButton\n                  accept=\"application/json\"\n                  strId=\"load-button-file\"\n                  fin={bookmarkFile}\n                  onChange={handleBookmarkLoad}\n                  label=\"Load Bookmark\"\n                />\n              </Box>\n            </div>\n          ),\n        }}\n      />\n    </div>\n\n  );\n}\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport FileSelectButton from './FileSelectButton'\nimport Container from '@material-ui/core/Container';\n\nexport default function BinaryFileInput(props) {\n  function handleFileSelect(newFileInfo, newData) {\n    props.onChange(newFileInfo, newData);\n  }\n  return (\n    <Container>\n      <Box\n        boxShadow={3}\n        bgcolor=\"background.paper\"\n        mt={3}\n        p={3}\n        display=\"flex\"\n        flexDirection=\"row\"\n        alignItems=\"center\"\n      >\n        <FileInput\n          fin={props.fin}\n          onChange={handleFileSelect}\n        />\n        <Box\n          mx={3}\n        >\n          <Typography noWrap=\"true\" style={{ width: '35rem', textAlign: 'left' }}>\n            {props.fileInfo}\n          </Typography>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nfunction FileInput(props) {\n\n  function handleFileSelect(event) {\n    event.preventDefault();\n    let f = props.fin.current.files[0];\n    let fileInfo = f.name\n    let data = \"\";\n    props.onChange(fileInfo, data);\n  }\n\n  return (\n    <div>\n      <FileSelectButton\n        strId=\"open-binnary-file-button\"\n        fin={props.fin}\n        onChange={handleFileSelect}\n        label=\"Open\"\n      />\n    </div>\n  );\n}","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Bookmark from './Bookmark'\nimport BinaryFileInput from './BinaryFileInput'\n\nexport default function HexBookmarkBody(props) {\n  const [inputBin, setInputBin] = React.useState({ fileInfo: \"Input Binary File\", data: \"\" });\n  function handleChangeInput(newFileInfo, newData) {\n    setInputBin({ fileInfo: newFileInfo, data: newData });\n    updateTableValues();\n  }\n\n  const dtypeEnum = {\n    int8: 0,\n    uint8: 1,\n    int16: 2,\n    uint16: 3,\n    int32: 4,\n    uint32: 5,\n    float32: 6,\n    float64: 7,\n    ascii: 8,\n  };\n  const dtypeLookup = {\n    [dtypeEnum.int8]: 'int8',\n    [dtypeEnum.uint8]: 'uint8',\n    [dtypeEnum.int16]: 'int16',\n    [dtypeEnum.uint16]: 'uint16',\n    [dtypeEnum.int32]: 'int32',\n    [dtypeEnum.uint32]: 'uint32',\n    [dtypeEnum.float32]: 'float32',\n    [dtypeEnum.float64]: 'float64',\n    [dtypeEnum.ascii]: 'ascii',\n  }\n  const dtypeSize = {\n    [dtypeEnum.int8]: 1,\n    [dtypeEnum.uint8]: 1,\n    [dtypeEnum.int16]: 2,\n    [dtypeEnum.uint16]: 2,\n    [dtypeEnum.int32]: 4,\n    [dtypeEnum.uint32]: 4,\n    [dtypeEnum.float32]: 4,\n    [dtypeEnum.float64]: 8,\n    [dtypeEnum.ascii]: 1,\n  }\n  const defaultDtype = dtypeEnum.int32;\n  const defaultDtypeStr = String(defaultDtype);\n  const defaultDsize = dtypeSize[dtypeEnum.int32];\n  const [state, setState] = React.useState({\n    columns: [\n      { title: 'Offset', field: 'offset' },\n      { title: 'Name', field: 'name' },\n      {\n        title: 'Data Type',\n        field: 'dataType',\n        lookup: dtypeLookup,\n      },\n      { title: 'Data size', field: 'dataSize' },\n      { title: 'Value', field: 'value', type: 'numeric', editable: 'never' },\n      { title: 'Hex Dump', field: 'hexDump', editable: 'never' },\n    ],\n    data: [\n      { offset: '0x00000000', name: '', dataType: defaultDtypeStr, dataSize: defaultDsize, value: '', hexDump: '' },\n    ],\n    isLittleEndian: true,\n  });\n\n\n  function validateDataSize(newData) {\n    const dtype = parseInt(newData['dataType']);\n    if (dtype === dtypeEnum.ascii) {\n      const maxLetters = 100;\n      const minLetters = 1;\n      let dataSizeInt = parseInt(newData['dataSize']);\n      if (isNaN(dataSizeInt) || dataSizeInt < minLetters || dataSizeInt > maxLetters) {\n        newData['dataSize'] = 1;\n      }\n      else {\n        newData['dataSize'] = dataSizeInt;\n      }\n    }\n    else {\n      newData['dataSize'] = dtypeSize[dtype];\n    }\n  }\n\n  function validateName(newData) {\n    const maxNameLength = 100;\n    if (typeof newData['name'] == 'undefined') {\n      return;\n    }\n    if (newData['name'].length > maxNameLength) {\n      newData['name'] = newData['name'].slice(0, maxNameLength);\n    }\n  }\n\n  function validateInput(oldData, newData) {\n    // validate offset\n    const offsetInt = parseInt(newData['offset']);\n    const minOffset = 0;\n    const maxOffset = 18446744073709551615; // = Math.pow(2, 64) - 1\n    if (isNaN(offsetInt) || offsetInt < minOffset || offsetInt > maxOffset) {\n      newData['offset'] = '0x0000'\n    }\n    // validate dataType\n    if (typeof newData['dataType'] == 'undefined') {\n      newData['dataType'] = defaultDtype;\n    }\n    // validate dataSize\n    validateDataSize(newData);\n    validateName(newData);\n    setState(prevState => {\n      const data = [...prevState.data];\n      data[data.indexOf(oldData)] = newData;\n      return { ...prevState, data };\n    });\n  }\n  function getAsciiChars(dataView, offsetInt, numLetters, isLittleEndian) {\n    let byteArr = [];\n    const firstLetter = 32; // 'SP'\n    const lastLetter = 126; // '~'\n    const defaultLetter = 46; // '.'\n    const sizeOfChar = 1;\n    for (let i = 0; i < numLetters; ++i) {\n      let val = dataView.getUint8(offsetInt + i * sizeOfChar, isLittleEndian);\n      if (val < firstLetter || val > lastLetter) {\n        val = defaultLetter;\n      }\n      byteArr.push(val);\n    }\n    let res = String.fromCharCode(...byteArr);\n    return res;\n  }\n\n  function readAsType(dtype, bufferView, offsetInt, dataSize, isLittleEndian) {\n    let res = 0;\n    // check bounds of data\n    if (offsetInt + dataSize > bufferView.byteLength) {\n      return 'Offset out of bounds';\n    }\n\n    // read data\n    if (dtype === dtypeEnum.int8) {\n      res = bufferView.getInt8(offsetInt, isLittleEndian);\n    }\n    else if (dtype === dtypeEnum.uint8) {\n      res = bufferView.getUint8(offsetInt, isLittleEndian);\n    }\n    else if (dtype === dtypeEnum.int16) {\n      res = bufferView.getInt16(offsetInt, isLittleEndian);\n    }\n    else if (dtype === dtypeEnum.uint16) {\n      res = bufferView.getUint16(offsetInt, isLittleEndian);\n    }\n    else if (dtype === dtypeEnum.int32) {\n      res = bufferView.getInt32(offsetInt, isLittleEndian);\n    }\n    else if (dtype === dtypeEnum.uint32) {\n      res = bufferView.getUint32(offsetInt, isLittleEndian);\n    }\n    else if (dtype === dtypeEnum.float32) {\n      res = bufferView.getFloat32(offsetInt, isLittleEndian);\n    }\n    else if (dtype === dtypeEnum.float64) {\n      res = bufferView.getFloat64(offsetInt, isLittleEndian);\n    }\n    else if (dtype === dtypeEnum.ascii) {\n      res = getAsciiChars(bufferView, offsetInt, dataSize, isLittleEndian);\n    }\n    else {\n      console.log('Unkown Data Type!');\n    }\n    return res;\n  }\n\n  function buf2hex(byteArray) { // buffer is an ArrayBuffer\n    let hexArr = [];\n    hexArr.push(...Array.prototype.map.call(\n      byteArray,\n      x => ('00' + x.toString(16).toUpperCase()).slice(-2)\n    ));\n    return hexArr.join('');\n  }\n\n  function readAsHex(buffer, offsetInt, dataSizeInt) {\n    // check bounds of data\n    if (offsetInt + dataSizeInt > buffer.byteLength) {\n      return '';\n    }\n    let byteArr = new Uint8Array(buffer);\n    return buf2hex(byteArr.slice(offsetInt, offsetInt + dataSizeInt));\n  }\n\n  function readValue(fin, oldData, newData) {\n    let f = fin.current.files[0];\n    if (typeof f !== 'undefined') {\n      let reader = new FileReader();\n      reader.onload = function (e) {\n        let buffer = reader.result;\n        let view = new DataView(buffer);\n        const offsetInt = parseInt(newData['offset']);\n        if (isNaN(offsetInt)) {\n          setState(prevState => {\n            const data = [...prevState.data];\n            newData['value'] = 'Invalid Offset';\n            data[data.indexOf(oldData)] = newData;\n            return { ...prevState, data };\n          });\n          return;\n        }\n        const dtypeInt = parseInt(newData.dataType);\n        const dataSizeInt = parseInt(newData.dataSize);\n        const readData = readAsType(dtypeInt, view, offsetInt, dataSizeInt, state.isLittleEndian);\n        const hexDump = readAsHex(buffer, offsetInt, dataSizeInt);\n        setState(prevState => {\n          const data = [...prevState.data];\n          newData['value'] = readData;\n          newData['hexDump'] = hexDump;\n          data[data.indexOf(oldData)] = newData;\n          return { ...prevState, data };\n        });\n      }\n      reader.onerror = function (e) {\n        console.log('onerror');\n      };\n      reader.onload = reader.onload.bind(this);\n      reader.readAsArrayBuffer(f);\n    }\n    else {\n      console.log('case undefined');\n    }\n  }\n\n  function updateTableValues() {\n    setState(prevState => {\n      const data = [...prevState.data];\n      for (let x in data) {\n        validateInput(data[x], data[x]);\n        formatInput(data[x], data[x]);\n        readValue(props.fin, data[x], data[x]);\n      }\n      return { ...prevState, data };\n    });\n  }\n\n  function formatOffset(oldData, newData) {\n    setState(prevState => {\n      const data = [...prevState.data];\n      const offsetInt = parseInt(newData['offset']);\n      const radix = 16;\n      const border = 4294967295; // Math.pow(2, 32) - 1\n      const numDigits = offsetInt > border ? 16 : 8;\n      newData['offset'] = '0x' + ((offsetInt).toString(radix)).toUpperCase().padStart(numDigits, '0');\n      data[data.indexOf(oldData)] = newData;\n      return { ...prevState, data };\n    });\n  }\n\n  function formatInput(oldData, newData) {\n    formatOffset(oldData, newData);\n  }\n\n  function handleToggleByteOder() {\n    setState(prevState => {\n      prevState.isLittleEndian = !prevState.isLittleEndian;\n      return { ...prevState }\n    });\n    updateTableValues();\n  }\n\n  function handleSaveBookmark() {\n    let bookmark = [];\n    for (let x in state.data) {\n      let row = state.data[x];\n      bookmark.push({ offset: row['offset'], name: row['name'], dataType: row['dataType'], dataSize: row['dataSize'], })\n    }\n    const string = JSON.stringify(bookmark);\n    const blob = new Blob([string], { \"type\": \"text/plain\" });\n    let link = document.createElement('a')\n    link.href = window.URL.createObjectURL(blob)\n    link.download = 'my_hex_bookmark.json'\n    link.click()\n  }\n\n  function handleBookmarkLoad() {\n    let f = props.bookmarkFile.current.files[0];\n    if (typeof f !== 'undefined') {\n      let reader = new FileReader();\n      reader.onload = function (e) {\n        let obj = JSON.parse(e.target.result);\n        setState(prevState => {\n          const data = [];\n          for (let x in obj) {\n            data.push(obj[x]);\n          }\n          return { ...prevState, data };\n        });\n        updateTableValues();\n        return;\n      }\n      reader.onerror = function (e) {\n        console.error('reading failed');\n      };\n      reader.onload = reader.onload.bind(this);\n      reader.readAsText(f);\n    }\n  }\n\n  function handleRowAdd(newData) {\n    return new Promise(resolve => {\n      resolve();\n      setState(prevState => {\n        const data = [...prevState.data];\n        data.push(newData);\n        return { ...prevState, data };\n      });\n      validateInput(newData, newData);\n      formatInput(newData, newData)\n      readValue(props.fin, newData, newData);\n    });\n  }\n\n  function handleRowUpdate(newData, oldData) {\n    return new Promise(resolve => {\n      resolve();\n      if (oldData) {\n        validateInput(oldData, newData);\n        formatInput(oldData, newData);\n        readValue(props.fin, oldData, newData);\n      }\n    });\n  }\n\n  function handleRowDelete(oldData) {\n    return new Promise(resolve => {\n      resolve();\n      setState(prevState => {\n        const data = [...prevState.data];\n        data.splice(data.indexOf(oldData), 1);\n        return { ...prevState, data };\n      });\n    });\n  }\n\n  return (\n    <Box>\n      <BinaryFileInput\n        fin={props.fin}\n        onChange={handleChangeInput}\n        fileInfo={inputBin.fileInfo}\n        data={inputBin.data}\n      />\n      <Bookmark\n        fin={props.fin}\n        onToggleByteOder={handleToggleByteOder}\n        onSaveBookmark={handleSaveBookmark}\n        onBookmarkLoad={handleBookmarkLoad}\n        isLittleEndian={state.isLittleEndian}\n        columns={state.columns}\n        data={state.data}\n        onRowAdd={handleRowAdd}\n        onRowUpdate={handleRowUpdate}\n        onRowDelete={handleRowDelete}\n        bookmarkFile={props.bookmarkFile}\n      />\n    </Box>\n  );\n}","import React from 'react';\n// import './App.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles';\nimport HexBookmarkBody from './HexBookmarkBody'\n\n\nfunction App(props) {\n  const classes = useStyles(props);\n  return (\n    <div className={classes.app}>\n      <HexBookmarkApp />\n      <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\"></link>\n    </div>\n  );\n}\n\nconst backgroundShape = require('./images/shape.svg');\nconst logo = require('./images/logo.svg');\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: [\n      '\"Courier New\"',\n      'Consolas',\n      'monospace',\n    ].join(','),\n  },\n  palette: {\n    primary: {\n      light: '#d9d9d9',\n      main: '#7b7b7b',\n      dark: '#262626',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#d9d9d9',\n      main: '#7b7b7b',\n      dark: '#262626',\n      contrastText: '#fff',\n    },\n\n  },\n});\n\nconst useStyles = makeStyles(theme => ({\n  app: {\n    textAlign: 'center',\n    flexGrow: 1,\n    backgroundColor: theme.palette.grey['100'],\n    overflow: 'hidden',\n    background: `url(${backgroundShape}) no-repeat`,\n    backgroundSize: 'cover',\n    backgroundPosition: '0 200px',\n    paddingBottom: 200\n  },\n}));\n\nfunction HexBookmarkApp(props) {\n  return (\n    <div>\n      <MuiThemeProvider theme={theme}>\n        <AppBar position=\"static\" color=\"default\">\n          <Toolbar>\n            <Typography\n              variant=\"h3\"\n              color=\"inherit\"\n            >\n              Hex Bookmark\n            </Typography>\n            <div style={{ marginLeft: '1.5em' }}>\n              <img width={50} height={50} src={logo} alt=\"\" />\n            </div>\n          </Toolbar>\n        </AppBar>\n        <HexBookmark />\n        <Copyright />\n      </MuiThemeProvider>\n    </div>\n  );\n}\n\nclass HexBookmark extends React.Component {\n  constructor(props) {\n    super(props);\n    this.fileInput = React.createRef();\n    this.bookmarkFile = React.createRef();\n  }\n  render() {\n    return (\n      <div>\n        <HexBookmarkBody\n          fin={this.fileInput}\n          bookmarkFile={this.bookmarkFile}\n        />\n      </div>\n    );\n  }\n}\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://github.com/utokusa/\">\n        Utokusa\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}